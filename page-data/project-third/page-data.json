{
    "componentChunkName": "component---src-templates-markdown-layout-tsx",
    "path": "/project-third/",
    "result": {"data":{"markdownRemark":{"html":"<h2>회원가입 유효성 검사</h2>\n<p>사용자가 회원가입을 위해 정보를 입력한 후 버튼을 눌러서 데이터베이스에 데이터를 전송하기 전에 저희가 정한 규칙을 만족시키지 못하면\r\n알림창과 함께 데이터를 전송 시키지 못하도록 유효성 검사를 구현 하였습니다.</p>\n<h4>조건</h4>\n<ul>\n<li>UserID : 15자 이하 숫자시작 불가 소문자만 가능</li>\n<li>NickName : 15자 이하 특수문자 및 공백 사용불가</li>\n<li>PassWord : 7자이상 20자 이하</li>\n</ul>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">var pattern_chk1 = /[`~!@#$%^&amp;*|\\\\\\`\\&quot;\\/?]/gi;\r\nvar pattern_chk2 = /[0-9]/;\r\nvar pattern_chk3 = /[A-Z]/;\r\n\r\nif (\r\n    UserName.length &lt;= 0 ||\r\n    UserName.length &gt; 15 ||\r\n    pattern_chk3.test(UserName) ||\r\n    pattern_chk1.test(UserName)\r\n) {\r\n    alert(&quot;아이디는 15자이하 소문자 알파벳만 가능합니다.&quot;);\r\n    return;\r\n} else if (pattern_chk2.test(UserName.charAt(0))) {\r\n    alert(&quot;아이디는 숫자로 시작할 수 없습니다.&quot;);\r\n    return;\r\n} else if (NickName.length &lt;= 0 || NickName.length &gt;= 15) {\r\n    alert(&quot;닉네임은 1글자 이상 15글자 이하로 입력해 주세요&quot;);\r\n    return;\r\n} else if (pattern_chk1.test(NickName)) {\r\n    alert(&quot;닉네임에 특수문자는 들어갈 수 없습니다.&quot;);\r\n    return;\r\n} else if (NickName.search(/\\s/) != -1) {\r\n    alert(&quot;닉네임에 공백은 들어갈 수 없습니다.&quot;);\r\n    return;\r\n} else if (PassWord.length &lt; 7 || PassWord.length &gt; 20) {\r\n    alert(&quot;패스워드는 7자 이상 20자 이하로 작성하여 주십시오&quot;);\r\n    return;\r\n}</code>\n        </deckgo-highlight-code>\n<h2>POST 와 fetch를 이용한 데이터 전송</h2>\n<p>유효성 검사를 한 후 유저가 입력한 정보가 이상이 없으면 데이터를 전송해야 합니다.</p>\n<p>각각 input의 value 값을 받아온 후 객체 형식으로 합쳐줍니다. 그리고 POST 요청으로 local 서버로 데이터를 전송 하는 작업을 하였습니다.</p>\n<p>POST 요청은 fetch로 구현 하였습니다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">fetch(url, {\r\n    method: &quot;POST&quot;,\r\n    headers: {\r\n        &quot;Content-Type&quot;: &quot;application/json&quot;,\r\n    },\r\n    body: JSON.stringify(user),\r\n});</code>\n        </deckgo-highlight-code>\n<h2>전송한 데이터 받은 후 데이터베이스에 저장</h2>\n<p>Front에서 전송한 데이터를 받은 후 MySql에서 만든 데이터베이스로 입력을 해주는 작업을 하였습니다.</p>\n<p>Backend 역시 기존 데이터를 사용할 때 사용한 get을 하는 것이 아닌 POST로 데이터를 받은 후 데이터베이스 구문으로 입력해 주었습니다.</p>\n<deckgo-highlight-code language=\"typescript\"  >\n          <code slot=\"code\">exp.use(express.urlencoded({ extended: true }));\r\nexp.use(express.json());\r\n\r\nexp.post(&quot;/&quot;, function (req, res) {\r\n    connection.query(\r\n        `INSERT INTO user(User_ID,PASSWORD,NICKNAME) VALUES (&#39;${req.body.User_ID}&#39;\r\n            ,&#39;${req.body.PASSWORD}&#39;,&#39;${req.body.NICKNAME}&#39;)`,\r\n        (err: Error) =&gt; {\r\n            if (err) throw err;\r\n        }\r\n    );\r\n});</code>\n        </deckgo-highlight-code>\n<h2>회원가입 테스트 후 MySQL User 테이블 결과</h2>\n<img src=\"https://user-images.githubusercontent.com/83346490/144743597-e19901c4-b85d-404a-beb4-4b8a02dbadd0.png\" class=\"img middle\"/>","frontmatter":{"emoji":"🧐","title":"학업: 데이터 베이스 기말 팀프로젝트-3","date":"2021-12-04","description":"회원가입 구현","tag":["TypeScript","JavaScript","Node.Js"]},"fields":{"slug":"/project-third/"},"id":"79653e22-7dc6-5fe2-95ae-e1ec832e281f"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/project-third/"},"frontmatter":{"description":"회원가입 구현","title":"학업: 데이터 베이스 기말 팀프로젝트-3"},"id":"79653e22-7dc6-5fe2-95ae-e1ec832e281f"},{"fields":{"slug":"/avoidbulletGame/"},"frontmatter":{"description":"Cocos-2dx 물리 엔진의 사용","title":"게임 개발: Avoid Bullet 게임 개발 후기"},"id":"7685253c-06cf-5a99-986a-39c0cbcc41fb"},{"fields":{"slug":"/blockgame/"},"frontmatter":{"description":"Cocos-2dx엔진을 이용한 게임 개발","title":"게임 개발: 2048 블록 게임 개발 후기"},"id":"2a53d7a7-f15f-55ab-9c71-d5d842cefad1"},{"fields":{"slug":"/project-second/"},"frontmatter":{"description":"영화 토론 게시판-Crawling","title":"학업: 데이터 베이스 기말 팀프로젝트-2"},"id":"f6897876-595d-59f9-be2a-b9a6fd7c2ad1"},{"fields":{"slug":"/project-first/"},"frontmatter":{"description":"데이터 베이스를 이용한 영화 토론 게시판","title":"학업: 데이터 베이스 기말 팀프로젝트-1"},"id":"657337b1-6ba9-592f-9a24-ee2b7ae7c523"},{"fields":{"slug":"/first-post/"},"frontmatter":{"description":"블로그 포스팅 계획","title":"첫 블로그 시작합니다."},"id":"49b775ef-6835-5fb8-8c25-fe7905aebe17"}]}},"pageContext":{"slug":"/project-third/"}},
    "staticQueryHashes": []}
{"version":3,"file":"component---src-pages-index-tsx-1c2ba5a77fdd04734746.js","mappings":"2LAEaA,EAAM,SAACC,GAClB,IAAQC,EAAYD,EAAZC,QACR,OACE,gCACE,uBAAKC,UAAU,oBACf,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YAAf,IAA4BD,GAC5B,sBAAIC,UAAU,iBACZ,0BACE,gBAAC,KAAD,CAAMC,GAAG,KAAT,UAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,aAAT,aAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,UAAT,YAIN,uBAAKD,UAAU,mB,8DCoFrB,UA5Ec,SAAC,GAAoB,IACjC,EADiC,EAAlBE,KACeC,kBAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACf,GAA0CC,EAAAA,EAAAA,UAAmB,IAAtDC,EAAP,KAAsBC,EAAtB,KACA,GAA0CF,EAAAA,EAAAA,UAAiBD,GAApDI,EAAP,KAAsBC,EAAtB,KACMC,EACJ,uBAAKX,UAAU,aACb,uBAAKA,UAAU,QAAf,MACA,oCACA,kDAGEY,EAAW,SAACC,GAAD,OAAkD,IAAhCN,EAAcO,QAAQD,GAAc,UAAY,IAC7EE,EAAgBX,EAAMY,KAAI,SAACC,EAAMC,GAAP,OAC9B,sBACEC,IAAG,YAAcD,EACjBE,QAAS,WACP,IAAMC,EAAWd,EAAcO,QAAQG,EAAKJ,MAC1B,IAAdQ,EACFd,EAAce,KAAKL,EAAKJ,KAExBN,EAAcgB,OAAOF,EAAU,GAEjCb,EAAiBD,GACY,IAAzBA,EAAciB,OAChBd,EAAiBL,GAEjBK,EACEL,EAAMoB,QAAO,SAACC,GAAD,OACXA,EAAKC,YAAYd,IAAIY,QAAO,SAACG,GAAD,OAAUrB,EAAcsB,SAASD,MAAOJ,SACpEjB,EAAciB,YAOtBxB,UAAWY,EAASK,EAAKJ,MAExBI,EAAKJ,QAGJiB,EAAWrB,EAAcO,KAAI,SAACU,EAAMK,GACxC,MAAiDL,EAAKC,YAA9CK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,YACtBC,EADN,EAAyCvB,IACVG,KAAI,SAACY,EAAMS,GACxC,OACE,sBAAIlB,IAAG,iBAAmBkB,EAAuBrC,UAAWY,EAASgB,IAClEA,MAIP,OACE,sBAAIT,IAAG,WAAaY,GAClB,gBAAC,KAAD,CAAM9B,GAAIyB,EAAKY,OAAOC,MACpB,2BACE,qBAAGvC,UAAU,QAAb,aAA+BkC,GAC/B,0BACGF,EADH,IACWC,GAEX,yBAAIE,GACJ,sBAAInC,UAAU,oBAAoBoC,SAM5C,OACE,gCACE,gBAAC,IAAD,MACA,2BAASpC,UAAU,iBACjB,sBAAIA,UAAU,eAAee,GAC7B,sBAAIyB,GAAG,SAA6B,IAApBV,EAASN,OAAeM,EAAWnB","sources":["webpack://hyeokjaelee.github.io/./src/components/nav.tsx","webpack://hyeokjaelee.github.io/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nexport const Nav = (props: any) => {\r\n  const { navItem } = props;\r\n  return (\r\n    <>\r\n      <div className=\"nav-padding top\" />\r\n      <nav className=\"nav\">\r\n        <div className=\"nav-item\"> {navItem}</div>\r\n        <ul className=\"nav-item link\">\r\n          <li>\r\n            <Link to=\"/\">Posts</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects\">Projects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"nav-padding\" />\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport { Nav } from \"../components/nav\";\r\n\r\ninterface Node {\r\n  excerpt: string;\r\n  fields: { slug: string };\r\n  frontmatter: {\r\n    emoji: string;\r\n    title: string;\r\n    date: string;\r\n    description: string;\r\n    tag: string[];\r\n  };\r\n}\r\ninterface Group {\r\n  tag: string;\r\n  totalCount: number;\r\n}\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      group: Group[];\r\n      nodes: Node[];\r\n    };\r\n  };\r\n}\r\n//ÌïÑÌÑ∞ ÏàòÏ†ïÌïòÍ∏∞\r\nconst Index = ({ data }: Props) => {\r\n  const { group, nodes } = data.allMarkdownRemark;\r\n  const [targetTagList, setTargetTagList] = useState<string[]>([]);\r\n  const [filteredNodes, setFilteredNodes] = useState<Node[]>(nodes);\r\n  const EmptyPostElement = (\r\n    <div className=\"emptyPost\">\r\n      <div className=\"icon\">üöß</div>\r\n      <h1>OOPSE!</h1>\r\n      <p>Ï°∞Í±¥ÏùÑ ÎßåÏ°±ÌïòÎäî PostÍ∞Ä ÏóÜÏäµÎãàÎã§.</p>\r\n    </div>\r\n  );\r\n  const checkTag = (tag: string) => (targetTagList.indexOf(tag) !== -1 ? \"checked\" : \"\");\r\n  const entireTagList = group.map((item, entireTagListIndex) => (\r\n    <li\r\n      key={`entireTag${entireTagListIndex}`}\r\n      onClick={() => {\r\n        const tagIndex = targetTagList.indexOf(item.tag);\r\n        if (tagIndex === -1) {\r\n          targetTagList.push(item.tag);\r\n        } else {\r\n          targetTagList.splice(tagIndex, 1);\r\n        }\r\n        setTargetTagList(targetTagList);\r\n        if (targetTagList.length === 0) {\r\n          setFilteredNodes(nodes);\r\n        } else {\r\n          setFilteredNodes(\r\n            nodes.filter((node) =>\r\n              node.frontmatter.tag.filter((_tag) => targetTagList.includes(_tag)).length ===\r\n              targetTagList.length\r\n                ? true\r\n                : false\r\n            )\r\n          );\r\n        }\r\n      }}\r\n      className={checkTag(item.tag)}\r\n    >\r\n      {item.tag}\r\n    </li>\r\n  ));\r\n  const PostList = filteredNodes.map((node, postListIndex) => {\r\n    const { emoji, title, date, description, tag } = node.frontmatter;\r\n    const IndividualsTagList = tag.map((_tag, individualsTagIndex) => {\r\n      return (\r\n        <li key={`individualsTag${individualsTagIndex}`} className={checkTag(_tag)}>\r\n          {_tag}\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <li key={`postList${postListIndex}`}>\r\n        <Link to={node.fields.slug}>\r\n          <div>\r\n            <p className=\"date\">Posted on {date}</p>\r\n            <h2>\r\n              {emoji} {title}\r\n            </h2>\r\n            <p>{description}</p>\r\n            <ul className=\"tags individuals\">{IndividualsTagList}</ul>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <section className=\"content first\">\r\n        <ul className=\"tags entire\">{entireTagList}</ul>\r\n        <ul id=\"posts\">{PostList.length !== 0 ? PostList : EmptyPostElement}</ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const data = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      group(field: frontmatter___tag) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          emoji\r\n          date\r\n          title\r\n          description\r\n          tag\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Nav","props","navItem","className","to","data","allMarkdownRemark","group","nodes","useState","targetTagList","setTargetTagList","filteredNodes","setFilteredNodes","EmptyPostElement","checkTag","tag","indexOf","entireTagList","map","item","entireTagListIndex","key","onClick","tagIndex","push","splice","length","filter","node","frontmatter","_tag","includes","PostList","postListIndex","emoji","title","date","description","IndividualsTagList","individualsTagIndex","fields","slug","id"],"sourceRoot":""}
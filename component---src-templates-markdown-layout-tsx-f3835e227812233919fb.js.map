{"version":3,"file":"component---src-templates-markdown-layout-tsx-f3835e227812233919fb.js","mappings":"2LAEaA,EAAM,WACjB,OACE,gCACE,uBAAKC,UAAU,eACf,uBAAKA,UAAU,OACb,0BACE,0BACE,gBAAC,KAAD,CAAMC,GAAG,KAAT,UAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,aAAT,aAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,UAAT,YAIN,uBAAKD,UAAU,qB,8DCwErB,UA5DkB,SAAC,GAAoB,IAAlBE,EAAkB,EAAlBA,KACXC,EAAsCD,EAAtCC,eACFC,GADwCF,EAAtBG,kBACPF,EAAeG,aAE1BC,GADgBL,EAAKG,kBAAkBG,MAChCJ,EAASK,IAAIC,KAAI,SAACC,GAAD,OAAU,0BAAKA,OAC7C,OACE,gCACE,gBAAC,IAAD,CACEC,MAAOR,EAASQ,MAChBC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASX,EAASY,aACzC,CAAEF,KAAM,WAAYC,QAASX,EAASK,IAAIQ,WAG9C,gBAAC,IAAD,MACA,2BAASC,GAAG,YACV,8BACE,yBAAId,EAASe,MACb,0BACGf,EAASgB,MADZ,IACoBhB,EAASQ,OAE7B,sBAAIZ,UAAU,oBAAoBO,IAEpC,2BACA,2BAASc,wBAAyB,CAAEC,OAAQnB,EAAeoB","sources":["webpack://hyeokjaelee.github.io/./src/components/nav.tsx","webpack://hyeokjaelee.github.io/./src/templates/markdown-layout.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nexport const Nav = () => {\r\n  return (\r\n    <>\r\n      <div className=\"topPadding\" />\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Posts</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects\">Projects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"bottomPadding\" />\r\n    </>\r\n  );\r\n};\r\n","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Nav } from \"../components/nav\";\r\ninterface Data {\r\n  excerpt: string;\r\n  fields: { slug: string };\r\n  frontmatter: { title: string; date: string };\r\n}\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: {\r\n      html: string;\r\n      frontmatter: {\r\n        emoji: string;\r\n        date: string;\r\n        title: string;\r\n        description: string;\r\n        tag: string[];\r\n      };\r\n      fields: {\r\n        slug: string;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      nodes: Data[];\r\n    };\r\n  };\r\n}\r\n\r\nconst BlogSpots = ({ data }: Props) => {\r\n  const { markdownRemark, allMarkdownRemark } = data;\r\n  const postInfo = markdownRemark.frontmatter;\r\n  const postsDataList = data.allMarkdownRemark.nodes;\r\n  const tags = postInfo.tag.map((_tag) => <li>{_tag}</li>);\r\n  return (\r\n    <>\r\n      <Helmet\r\n        title={postInfo.title}\r\n        meta={[\r\n          { name: \"description\", content: postInfo.description },\r\n          { name: \"keywords\", content: postInfo.tag.join() },\r\n        ]}\r\n      />\r\n      <Nav />\r\n      <section id=\"contents\">\r\n        <header>\r\n          <p>{postInfo.date}</p>\r\n          <h2>\r\n            {postInfo.emoji} {postInfo.title}\r\n          </h2>\r\n          <ul className=\"tags individuals\">{tags}</ul>\r\n        </header>\r\n        <hr />\r\n        <article dangerouslySetInnerHTML={{ __html: markdownRemark.html }} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        emoji\r\n        title\r\n        date\r\n        description\r\n        tag\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 5, sort: { fields: frontmatter___date, order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogSpots;\r\n"],"names":["Nav","className","to","data","markdownRemark","postInfo","allMarkdownRemark","frontmatter","tags","nodes","tag","map","_tag","title","meta","name","content","description","join","id","date","emoji","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}
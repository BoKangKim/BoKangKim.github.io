{"version":3,"file":"component---src-pages-index-tsx-21c0bc1b16abad0a83c9.js","mappings":"2LAEaA,EAAM,WACjB,OACE,gCACE,uBAAKC,UAAU,eACf,uBAAKA,UAAU,OACb,0BACE,0BACE,gBAAC,KAAD,CAAMC,GAAG,KAAT,UAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,aAAT,aAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,UAAT,YAIN,uBAAKD,UAAU,qB,8DCmErB,UAzDc,SAAC,GAAoB,IAAlBE,EAAkB,EAAlBA,KACTC,EAAQD,EAAKE,kBAAkBD,MACrC,GAA0BE,EAAAA,EAAAA,UAASH,EAAKE,kBAAkBE,OAAnDA,EAAP,KACA,GADA,MAC0CD,EAAAA,EAAAA,UAAmB,KAAtDE,EAAP,KAAsBC,EAAtB,KACMC,EAAgBN,EAAMO,KAAI,SAACC,EAAMC,GAAP,OAC9B,sBACEC,IAAG,YAAcD,EACjBE,QAAS,WACP,IAAMC,EAAWR,EAAcS,QAAQL,EAAKM,MAC1B,IAAdF,EACFR,EAAcW,KAAKP,EAAKM,KAExBV,EAAcY,OAAOJ,EAAU,GAEjCP,EAAiBD,GACjBa,QAAQC,IAAId,GACZa,QAAQC,IAAIC,KAGbX,EAAKM,QAGJK,EAAgBhB,EAAMiB,QAAO,SAACC,GAAD,OACjCjB,EAAckB,MAAK,SAACC,GAAD,OAA4D,IAA7CF,EAAKG,YAAYV,IAAID,QAAQU,SAEjEN,QAAQC,IAAIC,GACZ,IAAMM,EAAWtB,EAAMI,KAAI,SAACc,EAAMK,GAChC,MAAiDL,EAAKG,YAA9CG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,YACtBC,EADN,EAAyCjB,IACVP,KAAI,SAACyB,EAAMC,GACxC,OAAO,sBAAIvB,IAAG,iBAAmBuB,GAAwBD,MAE3D,OACE,sBAAItB,IAAG,WAAagB,GAClB,gBAAC,KAAD,CAAM5B,GAAIuB,EAAKa,OAAOC,MACpB,2BACE,qBAAGtC,UAAU,QAAb,aAA+BgC,GAC/B,0BACGF,EADH,IACWC,GAEX,yBAAIE,GACJ,sBAAIjC,UAAU,oBAAoBkC,SAM5C,OACE,gCACE,gBAAC,IAAD,MACA,2BAASK,GAAG,YACV,sBAAIvC,UAAU,eAAeS,GAC7B,sBAAI8B,GAAG,SAASX","sources":["webpack://hyeokjaelee.github.io/./src/components/nav.tsx","webpack://hyeokjaelee.github.io/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nexport const Nav = () => {\r\n  return (\r\n    <>\r\n      <div className=\"topPadding\" />\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Posts</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects\">Projects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"bottomPadding\" />\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport { Nav } from \"../components/nav\";\r\n\r\ninterface Nodes {\r\n  excerpt: string;\r\n  fields: { slug: string };\r\n  frontmatter: {\r\n    emoji: string;\r\n    title: string;\r\n    date: string;\r\n    description: string;\r\n    tag: string[];\r\n  };\r\n}\r\ninterface Group {\r\n  tag: string;\r\n  totalCount: number;\r\n}\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      group: Group[];\r\n      nodes: Nodes[];\r\n    };\r\n  };\r\n}\r\n//필터 수정하기\r\nconst Index = ({ data }: Props) => {\r\n  const group = data.allMarkdownRemark.group;\r\n  const [nodes, setNodes] = useState(data.allMarkdownRemark.nodes);\r\n  const [targetTagList, setTargetTagList] = useState<string[]>([]);\r\n  const entireTagList = group.map((item, entireTagListIndex) => (\r\n    <li\r\n      key={`entireTag${entireTagListIndex}`}\r\n      onClick={() => {\r\n        const tagIndex = targetTagList.indexOf(item.tag);\r\n        if (tagIndex === -1) {\r\n          targetTagList.push(item.tag);\r\n        } else {\r\n          targetTagList.splice(tagIndex, 1);\r\n        }\r\n        setTargetTagList(targetTagList);\r\n        console.log(targetTagList);\r\n        console.log(filteredNodes);\r\n      }}\r\n    >\r\n      {item.tag}\r\n    </li>\r\n  ));\r\n  const filteredNodes = nodes.filter((node) =>\r\n    targetTagList.some((targetTag) => node.frontmatter.tag.indexOf(targetTag) !== -1)\r\n  );\r\n  console.log(filteredNodes);\r\n  const postList = nodes.map((node, postListIndex) => {\r\n    const { emoji, title, date, description, tag } = node.frontmatter;\r\n    const individualsTagList = tag.map((_tag, individualsTagIndex) => {\r\n      return <li key={`individualsTag${individualsTagIndex}`}>{_tag}</li>;\r\n    });\r\n    return (\r\n      <li key={`postList${postListIndex}`}>\r\n        <Link to={node.fields.slug}>\r\n          <div>\r\n            <p className=\"date\">Posted on {date}</p>\r\n            <h2>\r\n              {emoji} {title}\r\n            </h2>\r\n            <p>{description}</p>\r\n            <ul className=\"tags individuals\">{individualsTagList}</ul>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <section id=\"contents\">\r\n        <ul className=\"tags entire\">{entireTagList}</ul>\r\n        <ul id=\"posts\">{postList}</ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const data = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      group(field: frontmatter___tag) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          emoji\r\n          date\r\n          title\r\n          description\r\n          tag\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Nav","className","to","data","group","allMarkdownRemark","useState","nodes","targetTagList","setTargetTagList","entireTagList","map","item","entireTagListIndex","key","onClick","tagIndex","indexOf","tag","push","splice","console","log","filteredNodes","filter","node","some","targetTag","frontmatter","postList","postListIndex","emoji","title","date","description","individualsTagList","_tag","individualsTagIndex","fields","slug","id"],"sourceRoot":""}
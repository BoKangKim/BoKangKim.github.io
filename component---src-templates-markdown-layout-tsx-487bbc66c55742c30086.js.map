{"version":3,"file":"component---src-templates-markdown-layout-tsx-487bbc66c55742c30086.js","mappings":"2LAEaA,EAAM,WACjB,OACE,gCACE,uBAAKC,UAAU,eACf,uBAAKA,UAAU,OACb,0BACE,0BACE,gBAAC,KAAD,CAAMC,GAAG,KAAT,UAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,aAAT,aAEF,0BACE,gBAAC,KAAD,CAAMA,GAAG,UAAT,YAIN,uBAAKD,UAAU,qB,oGCjBRE,EAAa,WAExB,IAAMC,GAAkBC,EAAAA,EAAAA,UACxB,GAA4BC,EAAAA,EAAAA,UAAS,WAA9BC,EAAP,KAAeC,EAAf,KAeA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,kBAAML,EAAU,YAClCE,EAASI,QAAU,kBAAMN,EAAU,WACnCE,EAASK,OAAQ,EACjBL,EAASM,IAAM,gCACfN,EAASO,aAAa,OAAQ,qCAC9BP,EAASO,aAAa,aAAc,SACpCP,EAASO,aAAa,QAAS,gBAC/BP,EAASO,aAAa,cAAe,aACrCb,EAAWc,QAAQC,YAAYT,KAC9B,IAED,2BACc,WAAXH,GAAuB,uDACZ,YAAXA,GAAwB,gDACzB,uBAAKa,GAAG,WAAWC,IAAKjB,MCqE9B,EA7DkB,SAAC,GAAoB,IAAlBkB,EAAkB,EAAlBA,KACXC,EAAsCD,EAAtCC,eACFC,GADwCF,EAAtBG,kBACPF,EAAeG,aAE1BC,GADgBL,EAAKG,kBAAkBG,MAChCJ,EAASK,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAAiB,sBAAIC,IAAKD,GAAQD,OAChE,OACE,gCACE,gBAACG,EAAA,EAAD,CACEC,MAAOX,EAASW,MAChBC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASd,EAASe,aACzC,CAAEF,KAAM,WAAYC,QAASd,EAASK,IAAIW,WAG9C,gBAAC,IAAD,MACA,2BAASpB,GAAG,YACV,8BACE,yBAAII,EAASiB,MACb,0BACGjB,EAASkB,MADZ,IACoBlB,EAASW,OAE7B,sBAAIlC,UAAU,oBAAoB0B,IAEpC,2BACA,2BAASgB,wBAAyB,CAAEC,OAAQrB,EAAesB,SAE7D,gBAAC1C,EAAD","sources":["webpack://hyeokjaelee.github.io/./src/components/nav.tsx","webpack://hyeokjaelee.github.io/./src/components/utterances.tsx","webpack://hyeokjaelee.github.io/./src/templates/markdown-layout.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nexport const Nav = () => {\r\n  return (\r\n    <>\r\n      <div className=\"topPadding\" />\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Posts</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects\">Projects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"bottomPadding\" />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const Utterances = () => {\r\n  //알맞은 타입을 못찾겠음.\r\n  const commentsEl: any = useRef();\r\n  const [status, setStatus] = useState(\"pending\");\r\n\r\n  //ss\r\n  useEffect(() => {\r\n    const scriptEl = document.createElement(\"script\");\r\n    scriptEl.onload = () => setStatus(\"success\");\r\n    scriptEl.onerror = () => setStatus(\"failed\");\r\n    scriptEl.async = true;\r\n    scriptEl.src = \"https://utteranc.es/client.js\";\r\n    scriptEl.setAttribute(\"repo\", \"HyeokjaeLee/hyeokjaelee.github.io\");\r\n    scriptEl.setAttribute(\"issue-term\", \"title\");\r\n    scriptEl.setAttribute(\"theme\", \"github-light\");\r\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\r\n    commentsEl.current.appendChild(scriptEl);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {status === \"failed\" && <div>Error. Please try again.</div>}\r\n      {status === \"pending\" && <div>Loading script...</div>}\r\n      <div id=\"comments\" ref={commentsEl} />\r\n    </div>\r\n  );\r\n};\r\n","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Nav } from \"../components/nav\";\r\nimport { Utterances } from \"../components/utterances\";\r\ninterface Data {\r\n  excerpt: string;\r\n  fields: { slug: string };\r\n  frontmatter: { title: string; date: string };\r\n}\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: {\r\n      html: string;\r\n      frontmatter: {\r\n        emoji: string;\r\n        date: string;\r\n        title: string;\r\n        description: string;\r\n        tag: string[];\r\n      };\r\n      fields: {\r\n        slug: string;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      nodes: Data[];\r\n    };\r\n  };\r\n}\r\n\r\nconst BlogSpots = ({ data }: Props) => {\r\n  const { markdownRemark, allMarkdownRemark } = data;\r\n  const postInfo = markdownRemark.frontmatter;\r\n  const postsDataList = data.allMarkdownRemark.nodes;\r\n  const tags = postInfo.tag.map((_tag, index) => <li key={index}>{_tag}</li>);\r\n  return (\r\n    <>\r\n      <Helmet\r\n        title={postInfo.title}\r\n        meta={[\r\n          { name: \"description\", content: postInfo.description },\r\n          { name: \"keywords\", content: postInfo.tag.join() },\r\n        ]}\r\n      />\r\n      <Nav />\r\n      <section id=\"contents\">\r\n        <header>\r\n          <p>{postInfo.date}</p>\r\n          <h2>\r\n            {postInfo.emoji} {postInfo.title}\r\n          </h2>\r\n          <ul className=\"tags individuals\">{tags}</ul>\r\n        </header>\r\n        <hr />\r\n        <article dangerouslySetInnerHTML={{ __html: markdownRemark.html }} />\r\n      </section>\r\n      <Utterances />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        emoji\r\n        title\r\n        date\r\n        description\r\n        tag\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 5, sort: { fields: frontmatter___date, order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogSpots;\r\n"],"names":["Nav","className","to","Utterances","commentsEl","useRef","useState","status","setStatus","useEffect","scriptEl","document","createElement","onload","onerror","async","src","setAttribute","current","appendChild","id","ref","data","markdownRemark","postInfo","allMarkdownRemark","frontmatter","tags","nodes","tag","map","_tag","index","key","Helmet","title","meta","name","content","description","join","date","emoji","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}